--01. Print Letters--

function solve(text) {
    let counter = 0;
    text.split("").forEach(x => {
        console.log("str[%s] -> %s", counter++, x)
    });
}

--02. Concatenate and Reverse--

function solve(text) {
    console.log(text.map(x => x.split("").reverse().join("")).reverse().join(""));
}

--03. Count Occurences--

function solve(textToFind, input) {
    let counter = 0;
    while(true){
        if (!input.includes(textToFind)){
            break;
        }else{
            let index = input.indexOf(textToFind);
            counter++;
            input = input.substring(index + 1);
        }
    }
    console.log(counter);
}

--04. Extract Text--

function solve(text) {
    let matches = text.match(/(?<=\().+?(?=\))/g);
    if (matches !== null){
        console.log(matches.join(", "))
    }
}

--05. Aggregate Table --

function solve(text) {
    let towns = [];
    let totalSum = 0;
    for (let i = 0; i < text.length; i++) {
        let townAndIncome = text[i].split("|").filter(x => x !== "").map(x => x.trim());
        towns.push(townAndIncome[0]);
        totalSum += Number(townAndIncome[1]);
    }
    console.log(towns.join(", "));
    console.log(totalSum);
}

--06. Restaurant Bill--

function solve(numbers) {
    console.log("You purchased " + numbers.filter((num, i) => i % 2 === 0).join(", ") +
        " for a total sum of " + numbers.filter((num, i) => i % 2 === 1).map(Number).reduce((a, b) => a + b))
}

--07. Usernames--

function solve(input) {
    let userNames = [];
    input.forEach(y => {
        let tokens = y.split("@");
        let name = tokens[0] + ".";
        let subTokens = tokens[1].split(".");
        subTokens.forEach(x => name += x[0]);
        userNames.push(name);
    });
    console.log(userNames.join(", "))
}

--08. Censorship--

function solve(text, wordsToCensor) {
    wordsToCensor.forEach(x => text = text.replace(new RegExp("" + x, "g"), "-".repeat(x.length)));
    console.log(text);
}

--09. Escaping--

function htmlEscape(text){
    let output = "<ul>\n"
    let escapes = {
        "<":"&lt;",
        ">":"&gt;",        
        "\"":"&quot;"
    }
    for (let index in text) {
        if (text[index].indexOf("&") !== -1) {
            text[index] = text[index].split("")
            for (let i = 0; i < text[index].length; i++) {
                if (text[index][i] === "&") {
                    text[index][i] = "&amp;"
                }                
            }
            text[index] = text[index].join("")
        }
        for (let esc in escapes) {
            let indexBan = text[index].indexOf(esc)

            while (indexBan > -1) {
                text[index] = text[index].replace(esc, escapes[esc])
                indexBan = text[index].indexOf(esc, indexBan)
            }
        }
        output += "  <li>"+text[index]+"</li>\n"
    }
    output+="</ul>\n"
    return output 
}

--10. Match All Words--

function solve(text) {
    console.log(text.match(/[\w\d]+/g).join("|"))
}

--11. Email Validation--

function solve(text) {
    let match = text.match(/^[A-Za-z0-9]+@[a-z]+\.[a-z]+$/);
    if (match === null){
        console.log("Invalid");
    }else{
        console.log("Valid")
    }
}

--12.* Expression Split--

function solve(text) {
    console.log(text.split(/[ (),;.\t]/).filter(x => x !== "").join("\n"))
}

--13. Match the Dates--

function solve(input) {
    input.forEach(x => {
        let matches = x.match(/\b([0-9]{1,2})-([A-Z][a-z]{2})-([0-9]{4})\b/g);
        if (matches !== null){
            for (let match of matches){
                let dateInfo = match.split("-");
                console.log("%s (Day: %s, Month: %s, Year: %s)", match, dateInfo[0], dateInfo[1], dateInfo[2])
            }
        }
    })
}

--14. Employee Data--

function solve(input) {
    input.forEach(x => {
        let match = x.match(/^([A-Z][a-zA-Z]*) - ([1-9][0-9]*) - ((([A-Za-z-0-9]+) ?)+)$/);
        if (match !== null){
                console.log("Name: %s", match[1]);
                console.log("Position: %s", match[3]);
                console.log("Salary: %s", match[2]);
        }
    })
}

--15. Form Filler--

function solve(name, email, number, text) {
    let userNameRegex = /<!([A-Za-z]+)!>/g;
    let emailRegex = /<@([A-Za-z]+)@>/g;
    let phoneNumberRegex = /<\+([A-Za-z]+)\+>/g;

    function replacePlaceholder (match, sentence, replacement, regex){
        if (match !== null){
            match.forEach( x => sentence = sentence.replace(x.match(regex), replacement));
        }
        return sentence;
    }

    for (let i = 0; i < text.length; i++) {
        text[i] = replacePlaceholder(text[i].match(userNameRegex), text[i], name, userNameRegex);
        text[i] = replacePlaceholder(text[i].match(emailRegex), text[i], email, emailRegex);
        text[i] = replacePlaceholder(text[i].match(phoneNumberRegex), text[i], number, phoneNumberRegex);
    }
    console.log(text.join("\n"));
}

--16. Match Multiplication--

function solve(input) {
    let matches = input.match(/(-?[0-9]+)\s*\*\s*(-?[0-9]+\.?[0-9]+)/g);
    if (matches !== null){
        for (let i = 0; i < matches.length; i++) {
            let numOne = matches[i].match(/(-?[0-9]+)\s*\*\s*(-?[0-9]+\.?[0-9]+)/)[1];
            let numTwo = matches[i].match(/(-?[0-9]+)\s*\*\s*(-?[0-9]+\.?[0-9]+)/)[2];
            input = input.replace(matches[i], numOne * numTwo);
        }
    }
    console.log(input)
}


